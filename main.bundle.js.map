{"version":3,"sources":["C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/$_lazy_route_resource lazy","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.module.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.routes.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/edit-pipe.pipe.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/filter-pipe.pipe.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/ng-enter.directive.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/api.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/data-share.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/global-style.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/session-guard.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/session-storage.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/user-resolver.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/user.service.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube.pipe.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.css","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.html","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/environments/environment.ts","C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin-top{\\r\\n    margin-top: 1%;\\r\\n}\\r\\n\\r\\n.margin-bottom{\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n\\r\\n.md-input{\\r\\n    max-width: 50%;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.no-padding{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n    background-color: #333333;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://code.getmdl.io/1.3.0/material.grey-red.min.css\\\">\\r\\n<script src=\\\"/node_modules/material-design-lite/material.min.js\\\"></script>\\r\\n<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\r\\n\\r\\n<ng-progress [thick]=\\\"true\\\" color=\\\"red\\\" [spinner]=\\\"false\\\"></ng-progress>\\r\\n<nav class=\\\"navbar sticky-top navbar-expand-md navbar-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" style=\\\"display: inline\\\" (click)=\\\"isSidebarCollapsed = !isSidebarCollapsed\\\">Show sidebar</button>\\r\\n    <img class=\\\"text-light\\\" src=\\\"favicon.ico\\\" width=\\\"30\\\" height=\\\"30\\\" [routerLink]=\\\"['/home']\\\"/>\\r\\n  </a>\\r\\n  <button class=\\\"navbar-toggler hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    [attr.aria-expanded]=\\\"isNavbarCollapsed\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <input class=\\\"nav-item form-control md-input\\\" [value]=\\\"searchValue\\\" (input)=\\\"searchValue = $event.target.value\\\" type=\\\"text\\\"\\r\\n      placeholder=\\\"Search...\\\" (ngEnter)=\\\"search()\\\" *ngIf=\\\"this.isLoggedIn()\\\"/>\\r\\n\\r\\n    <div class=\\\"nav-item\\\" *ngIf=\\\"this.selectedPlaylist && this.isLoggedIn()\\\">\\r\\n      <img class='icon icon-middle icon-md float-left' src=\\\"assets/playlist/last_song.png\\\" (click)='this.YT.lastSong()' />\\r\\n      <img class=\\\"icon icon-middle icon-md\\\" [src]=\\\"this.YT.paused ? 'assets/playlist/play_button.png' : 'assets/playlist/pause_button.png'\\\"\\r\\n        (click)=\\\"this.YT.pauseClicked()\\\" />\\r\\n      <img class='icon icon-middle icon-md' src=\\\"assets/playlist/next_song.png\\\" (click)='this.YT.nextSong()' />\\r\\n      <img class=\\\"icon icon-middle icon-md\\\" [src]=\\\"this.YT.repeat ? 'assets/playlist/repeat_song_on.png' : 'assets/playlist/repeat_song_off.png'\\\"\\r\\n        (click)=\\\"this.YT.repeatClicked()\\\" />\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success icon-middle\\\" (click)=\\\"enablePlaylist()\\\" *ngIf=\\\"!this.showPlaylist\\\">Show Playlist</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success icon-middle\\\" (click)=\\\"search()\\\" *ngIf=\\\"this.showPlaylist\\\">Show Page</button>\\r\\n    </div>\\r\\n\\r\\n    <div ngbDropdown placement=\\\"bottom\\\" class=\\\"nav-item ml-auto\\\" *ngIf=\\\"this.isLoggedIn()\\\">\\r\\n      <img ngbDropdownToggle class=\\\"icon icon-middle icon-md\\\" src=\\\"assets/shared/profile_white.png\\\" />\\r\\n      <div ngbDropdownMenu>\\r\\n        <button class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile']\\\">Profile</button>\\r\\n        <button class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\" (click)=\\\"this.logOut()\\\">Logout</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"main-container container-fluid\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!this.isLoggedIn()\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <login></login>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"this.isLoggedIn()\\\">\\r\\n\\r\\n    <div class=\\\"col-sm-2 shadow no-padding\\\" *ngIf=\\\"!isSidebarCollapsed\\\">\\r\\n      <app-sidebar (playlist)=\\\"selectPlaylist($event)\\\" *ngIf=\\\"this.getUser()\\\"></app-sidebar>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-10 margin-top margin-bottom\\\">\\r\\n      <div class=\\\"col-sm-6 no-padding mx-auto shadow\\\">\\r\\n        <app-youtube [playlist]=\\\"this.selectedPlaylist\\\" [showPlaylist]=\\\"this.showPlaylist\\\"></app-youtube>\\r\\n      </div>\\r\\n      <!--<router-outlet class=\\\"col-12 margin-top mx-auto\\\" *ngIf=\\\"!this.showPlaylist\\\"></router-outlet>-->\\r\\n      <!--Add this once we figure out how to send @Input() with router links! -->\\r\\n      <div class=\\\"col-sm-7 margin-top mx-auto\\\" style=\\\"margin-top: 5%\\\" *ngIf=\\\"!this.showPlaylist\\\">\\r\\n        <home [searchString]=\\\"this.searchString\\\"></home>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","/*\r\n  Written by: Ryan Kruse\r\n  This component controls the core logic of the app. It holds all of the child components (sidebar, youtube, home <--which is search)\r\n*/\r\nimport { Component, ViewChild, OnInit, HostListener} from '@angular/core';\r\n\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { ApiService } from './shared/api.service';\r\nimport { DataShareService } from './shared/data-share.service';\r\nimport { StorageService } from './shared/session-storage.service';\r\n\r\nimport { YoutubeComponent } from './youtube/youtube.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\n\r\nimport { User } from './interfaces/user';\r\nimport { Playlist } from './interfaces/playlist';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css', './shared/global-style.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild(YoutubeComponent) YT: YoutubeComponent;\r\n\r\n  user: User;\r\n\r\n  selectedPlaylist: Playlist;\r\n  searchValue: string = \"\";\r\n\r\n  searchString: string = \"\";\r\n\r\n  isNavbarCollapsed = true;\r\n  isSidebarCollapsed = false;\r\n  showPlaylist: boolean = false;\r\n\r\n  private minWindowSize: number = 720;\r\n\r\n  constructor(private _apiService: ApiService, public _storage: StorageService, private _dataShareService: DataShareService) { }\r\n\r\n  @HostListener('window:resize') onResize() {\r\n    this.isSidebarCollapsed = window.outerWidth <= this.minWindowSize;\r\n    // console.log(window.outerWidth);\r\n  }\r\n\r\n  /*\r\n    On init, if the user is currently logged in (which can happen if they refresh the page), we pull the user from the API and \r\n    update the data-share service with the found user\r\n  */\r\n  ngOnInit() {\r\n    if (this.isLoggedIn()) {\r\n      let s: Subscription;\r\n      let tempUser: User;\r\n\r\n      s = this._apiService.validateToken().subscribe(\r\n        d => tempUser = d,\r\n        err => console.log(err),\r\n        () => { s.unsubscribe(); \r\n          this.user = tempUser; \r\n          this._dataShareService.changeUser(this.user);\r\n        }\r\n      );\r\n    }\r\n\r\n    this._dataShareService.currentPlaylist.subscribe(res => this.selectedPlaylist = res);\r\n  }\r\n\r\n  /*\r\n    Called when we select a playlist from the side bar, it updates the data-share service with the playlist\r\n    and then shows the playlist on the DOM\r\n    @param event: Playlist - the playlist that was selected\r\n  */\r\n  selectPlaylist(event: Playlist) {\r\n    this.selectedPlaylist = event;\r\n    this.showPlaylist = event != null;\r\n\r\n    this.isSidebarCollapsed = window.outerWidth <= this.minWindowSize;\r\n    \r\n    this._dataShareService.changeCurrentPlaylist(event);\r\n  }\r\n\r\n  /*\r\n    Called when we click the button to show the current playlist rather than the search (home) screen\r\n  */\r\n  enablePlaylist() {\r\n    this.showPlaylist = true;\r\n  }\r\n\r\n  /*\r\n    Called when the user searches for a string in the input box on the navbar. It removes the current playlist \r\n    from the view and shows a list of results that match the search string\r\n  */\r\n  search() {\r\n    this.showPlaylist = false;\r\n    this.searchString = this.searchValue;\r\n  }\r\n\r\n  getUser(): User {\r\n    this._dataShareService.user.subscribe(res => this.user = res);\r\n    return this.user;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this._storage.getValue('loggedIn') || this._storage.getValue('token');\r\n  }\r\n\r\n  logOut(){\r\n    this._storage.setValue(\"loggedIn\", false);\r\n    this._storage.removeValue(\"token\");\r\n\r\n    this._dataShareService.clearAllValues();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { rootRouterConfig } from './app.routes';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgProgressModule } from '@ngx-progressbar/core';\r\nimport { NgProgressHttpClientModule } from '@ngx-progressbar/http-client';\r\n\r\nimport { YoutubePlayerModule } from 'ngx-youtube-player';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HomeComponent } from './home/home.component'\r\n\r\n\r\nimport { StorageService } from './shared/session-storage.service';\r\nimport { SessionGuard } from './shared/session-guard.service'\r\nimport { UserResolver } from './shared/user-resolver.service';\r\nimport { ApiService } from './shared/api.service';\r\nimport { DataShareService } from './shared/data-share.service';\r\nimport { UserService } from './shared/user.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgEnterDirective } from './ng-enter.directive';\r\nimport { YoutubeComponent } from './youtube/youtube.component';\r\nimport { FilterPipe } from './filter-pipe.pipe';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { EditPipe } from './edit-pipe.pipe';\r\nimport { MouseoverMenuComponent } from './mouseover-menu/mouseover-menu.component';\nimport { YoutubePipe } from './youtube.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    NgEnterDirective,\r\n    YoutubeComponent,\r\n    FilterPipe,\r\n    SidebarComponent,\r\n    EditPipe,\r\n    MouseoverMenuComponent,\r\n    YoutubePipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    NgbModule.forRoot(),\r\n    NgProgressModule.forRoot(),\r\n    NgProgressHttpClientModule,\r\n    YoutubePlayerModule,\r\n    RouterModule.forRoot(rootRouterConfig, { useHash: true })    \r\n  ],\r\n  providers: [\r\n    StorageService,\r\n    SessionGuard,\r\n    ApiService,\r\n    UserService,\r\n    DataShareService,\r\n    UserResolver\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.module.ts","/*\r\n  Standard routing service\r\n*/\r\nimport { Routes } from '@angular/router';\r\nimport { SessionGuard } from './shared/session-guard.service';\r\nimport { UserResolver } from './shared/user-resolver.service'\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\nimport { LoginComponent } from './login/login.component'; \r\n\r\nexport const rootRouterConfig: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'home', canActivate: [ SessionGuard ], resolve: { user: UserResolver }, component: HomeComponent },\r\n  { path: 'profile', canActivate: [ SessionGuard ], resolve: { user: UserResolver }, component: ProfileComponent },\r\n  { path: 'login', component: LoginComponent }\r\n];\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/app.routes.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Artist } from './interfaces/artist';\r\nimport { Album } from './interfaces/album';\r\nimport { Song } from './interfaces/song';\r\n\r\n@Pipe({\r\n  name: 'editPipe'\r\n})\r\nexport class EditPipe implements PipeTransform {\r\n\r\n  transform<T>(items: T[], artist: Artist, album: Album): T[] {\r\n    if(!items) return [];\r\n    if(!artist && !album) return items;\r\n\r\n    let filterId: number;\r\n    if(artist && !album){\r\n      filterId = artist.artistId;\r\n\r\n      return items.filter(it =>{\r\n        return it['artistId'] == artist.artistId;\r\n      });\r\n    }\r\n\r\n    filterId = album.albumId;\r\n    return items.filter(it => {\r\n      return it['albumId'] == filterId;\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/edit-pipe.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterPipe'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform<T>(items: T[], searchText: string): T[] {\r\n    if(!items) return [];\r\n    if(!searchText) return items;\r\n\r\n    searchText = searchText.toLowerCase();\r\n\r\n    return items.filter(it =>{\r\n      return it['name'].toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/filter-pipe.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"main-container container-fluid shadow no-padding\\\">\\r\\n    <ngb-tabset justify=\\\"justified\\\">\\r\\n        <ngb-tab title=\\\"Our Results\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">Top Results for: {{ searchString }}</div>\\r\\n                </div>\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item list-group-item-action\\\" (mouseover)=\\\"this.mouseOver = i\\\" (mouseout)=\\\"this.mouseOver = -1\\\" *ngFor=\\\"let song of songs | async | filterPipe : searchString index as i\\\">\\r\\n                        {{ song.name }}\\r\\n                        <app-mouseover-menu [@showState]=\\\"this.mouseOver === i ? 'show' : 'hide'\\\" [addToPL]=\\\"true\\\" [addToQ]=\\\"true\\\" [deleteFromPL]=\\\"false\\\"\\r\\n                            [selectedSong]=\\\"song\\\" (successMessageOutput)=\\\"triggerMessage($event)\\\"></app-mouseover-menu>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab title=\\\"Youtube Results\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">Top Results for: {{ searchString }}</div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"this.searchString.length\\\">\\r\\n                    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let result of youtubeResults | async | youtubePipe index as i\\\">\\r\\n                        <li class=\\\"list-group-item list-group-item-action\\\" (mouseover)=\\\"this.mouseOver = i\\\" (mouseout)=\\\"this.mouseOver = -1\\\" (click)=\\\"selectYoutubeSong(result, content)\\\"\\r\\n                            *ngIf=\\\"i <= this.currentlyDisplaying\\\">\\r\\n                            {{ result.snippet.title }}\\r\\n                            <!--<app-mouseover-menu [@showState]=\\\"this.mouseOver === i ? 'show' : 'hide'\\\" [addToPL]=\\\"true\\\" [addToQ]=\\\"true\\\" [deleteFromPL]=\\\"false\\\" [selectedSong]=\\\"song\\\" (successMessageOutput)=\\\"triggerMessage($event)\\\"></app-mouseover-menu>-->\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary no-padding mx-auto w-100\\\" [disabled]=\\\"!canShowMore()\\\" (click)=\\\"showMoreYoutube()\\\">Show More</button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n    </ngb-tabset>\\r\\n    <div id=\\\"snackbar\\\" [@showState]=\\\"successMessage ? 'show' : 'hide'\\\">{{ successMessage }}</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Here's What We Found!</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body form was-validated\\\">\\r\\n\\r\\n        <div class=\\\"form-group row mx-auto\\\">\\r\\n            <label for=\\\"inputpotentialArtist\\\" class=\\\"col-form-label font-weight-bold\\\">Artist:</label>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <input [value]=\\\"potentialArtist\\\" (input)=\\\"potentialArtist = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputpotentialArtist\\\"\\r\\n                    placeholder=\\\"Artist Name\\\" (focusout)=\\\"loadTrackFromFM()\\\" [disabled] = \\\"this.selectedArtist\\\" required>\\r\\n                <!--<small id=\\\"artistHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!usernameTaken && hasClickedOff\\\">Username is available!</small>-->\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row mx-auto\\\">\\r\\n            <label for=\\\"inputpotentialAlbum\\\" class=\\\"col-form-label font-weight-bold\\\">Album:</label>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <input [value]=\\\"potentialAlbum\\\" (input)=\\\"potentialAlbum = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputpotentialAlbum\\\"\\r\\n                    placeholder=\\\"Album Name\\\" (focusout)=\\\"loadTrackFromFM()\\\" [disabled] = \\\"this.selectedAlbum\\\" required>\\r\\n                <!--<small id=\\\"artistHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!usernameTaken && hasClickedOff\\\">Username is available!</small>-->\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row mx-auto\\\">\\r\\n            <label for=\\\"inputpotentialSong\\\" class=\\\"col-form-label font-weight-bold\\\">Song:</label>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <input [value]=\\\"potentialSong\\\" (input)=\\\"potentialSong = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputpotentialSong\\\"\\r\\n                    placeholder=\\\"Song Name\\\"  (focusout)=\\\"loadTrackFromFM()\\\" [disabled] = \\\"this.selectedSong\\\" required>\\r\\n                <!--<small id=\\\"artistHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!usernameTaken && hasClickedOff\\\">Username is available!</small>-->\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success col-3\\\" (click)=\\\"c()\\\" [disabled]=\\\"potentialArtist.length <= 0 || potentialAlbum.length <= 0 || potentialSong.length <= 0 \\\">Looks Good!</button>\\r\\n    </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","/*\r\n    Writtne by: Ryan Kruse\r\n    \r\n*/\r\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { trigger, state, animate, transition, style, sequence } from '@angular/animations';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { debounceTime } from 'rxjs/operator/debounceTime';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\n\r\nimport { MouseoverMenuComponent } from '../mouseover-menu/mouseover-menu.component';\r\nimport { SidebarComponent } from '../sidebar/sidebar.component';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { Playlist } from '../interfaces/playlist';\r\nimport { PlaylistSong } from '../interfaces/playlistsong';\r\nimport { Artist } from '../interfaces/artist';\r\nimport { Album } from '../interfaces/album';\r\nimport { Song } from '../interfaces/song';\r\n\r\nimport { YoutubeResult, items } from '../interfaces/youtuberesult';\r\nimport { LastfmTrack } from '../interfaces/lastfmresult';\r\n\r\n@Component({\r\n    selector: 'home',\r\n    styleUrls: ['./home.component.css', '../shared/global-style.css'],\r\n    templateUrl: './home.component.html',\r\n    animations: [\r\n        trigger(\r\n            'showState', [\r\n                state('show', style({\r\n                    opacity: 1,\r\n                    visibility: 'visible'\r\n                })),\r\n                state('hide', style({\r\n                    opacity: 0,\r\n                    visibility: 'hidden'\r\n                })),\r\n                transition('show => *', animate('200ms')),\r\n                transition('hide => show', animate('400ms')),\r\n            ]\r\n        )\r\n    ]\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n    @Input() searchString: string;\r\n\r\n    mouseOver: number = -1;\r\n\r\n    private _success = new Subject<string>();\r\n    successMessage: string;\r\n\r\n    artists: Artist[] = [];\r\n\r\n    songs: Observable<Song[]> = this._apiService.getAllEntities<Song>('Songs');\r\n\r\n    private numToFetch: number = 50; //Number to pull from youtube\r\n    private numToDisplay: number = this.numToFetch / 2; //Only show half at a time\r\n    currentlyDisplaying: number = this.numToDisplay; //How many we are currently showing\r\n\r\n    youtubeResults: Observable<YoutubeResult[]> = this._apiService.getYoutubeResults(this.searchString, this.numToFetch);\r\n\r\n    potentialArtist: string = \"\";\r\n    potentialAlbum: string = \"\";\r\n    potentialSong: string = \"\";\r\n    private potentialID: string; //Video ID\r\n\r\n    selectedArtist: Artist;\r\n    selectedAlbum: Album;\r\n    selectedSong: Song;\r\n\r\n    private needToSendToDB: boolean[] = [false, false, false]; //Art, Alb, Song (true if we need to add it to our database);\r\n\r\n    constructor(private _apiService: ApiService, private _modalService: NgbModal) { }\r\n\r\n    ngOnInit() {\r\n        this._success.subscribe((message) => this.successMessage = message);\r\n        debounceTime.call(this._success, 2000).subscribe(() => this.successMessage = null);\r\n\r\n        let s: Subscription = this._apiService.getAllEntities<Artist>(\"Artists\").subscribe(\r\n            d => this.artists = d,\r\n            err => console.log(err),\r\n            () => s.unsubscribe()\r\n        );\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.youtubeResults = this._apiService.getYoutubeResults(this.searchString, this.numToFetch);\r\n    }\r\n\r\n    /*\r\n        Note: The parsing for this method is really bad and will be fixed once I learn more regex!\r\n    */\r\n    selectYoutubeSong(result: items, content) {\r\n        let title: string = result.snippet.title;\r\n\r\n        let splitOnDash: string[] = title.split(\"-\");\r\n        let splitOnCol: string[] = title.split(\":\");\r\n        let splitOnPar: string[] = title.split('\"');\r\n\r\n        if (splitOnDash.length >= 2) {\r\n            this.potentialArtist = splitOnDash[0];\r\n            this.potentialSong = splitOnDash[1];\r\n        } else if (splitOnCol.length >= 2) {\r\n            this.potentialArtist = splitOnCol[0];\r\n            this.potentialSong = splitOnCol[1];\r\n        } else if (splitOnPar.length >= 2) {\r\n            this.potentialArtist = splitOnPar[0];\r\n            this.potentialSong = splitOnPar[1];\r\n        }\r\n\r\n        this.potentialSong = this.potentialSong.replace(/\\[[^\\]]*?\\]/g, ' ');\r\n        this.potentialSong = this.potentialSong.replace(/ *\\([^)]*\\) */g, \" \");\r\n\r\n        this.potentialArtist = this.potentialArtist.trim();\r\n        this.potentialSong = this.potentialSong.trim();\r\n\r\n        this.potentialID = result.id.videoId;\r\n\r\n        this.loadTrackFromFM();\r\n        this.openModal(content);\r\n    }\r\n\r\n    /*\r\n        This pulls track information from the Last.FM music API (this allows us to make sure that all of the data is standardized)\r\n    */\r\n    loadTrackFromFM() {\r\n        this.selectedArtist = null;\r\n        this.selectedAlbum = null;\r\n        this.selectedSong = null;\r\n\r\n        let tracks: LastfmTrack;\r\n        let s: Subscription = this._apiService.getLastfmResults(this.potentialArtist, this.potentialSong).subscribe(\r\n            d => tracks = d,\r\n            err => console.log(err),\r\n            () => {\r\n                s.unsubscribe();\r\n                this.checkIfArtistSaved(tracks);\r\n            }\r\n        )\r\n    }\r\n\r\n    /*\r\n        This method takes the saved data from Last.FM and checks to see if we currently own it in our DB\r\n    */\r\n    checkIfArtistSaved(track: LastfmTrack) {\r\n        let artist: string;\r\n        let album: string;\r\n        let song: string;\r\n\r\n        try {\r\n            artist = track.track.album.artist;\r\n            album = track.track.album.title;\r\n            song = track.track.name;\r\n        }catch(e){\r\n            return;\r\n        }\r\n\r\n        this.potentialAlbum = album;\r\n        let pArt: Artist = this.artists.find(x => x.name.toLowerCase() === artist.toLowerCase()); //Check to see if we have artists\r\n\r\n        if (pArt) { //If we already have the artist in our database, pull its information\r\n            this.needToSendToDB[0] = false;\r\n            let foundArtist: Artist;\r\n\r\n            let s: Subscription = this._apiService.getSingleEntity<Artist>(\"Artists/Spec\", pArt.artistId).subscribe(\r\n                d => foundArtist = d,\r\n                err => console.log(err),\r\n                () => {\r\n                    s.unsubscribe();\r\n                    this.selectedArtist = foundArtist;\r\n                    this.checkIfSongInAlbums(foundArtist, album, song);\r\n                }\r\n            )\r\n        } else { //We don't have the artist => we don't have the song or album so we need to make new ones!\r\n            this.needToSendToDB = [true, true, true];\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n        This method is called I.F.F we have the artist already in our database...if we do, we might have the proper album/song\r\n    */\r\n    checkIfSongInAlbums(artist: Artist, album: string, song: string) {\r\n        let alb: Album;\r\n        let s: Song;\r\n        for (let i = 0; i < artist.album.length; i++) {\r\n            alb = artist.album[i];\r\n\r\n\r\n            if (alb.name.toLowerCase() === album.toLowerCase()) { //If we currently own the album\r\n                this.potentialAlbum = alb.name;\r\n                //Loop through the songs of the album\r\n                for (let j = 0; j < alb.song.length; j++) {\r\n                    s = alb.song[j];\r\n\r\n                    //If we find a matching song there isn't anything to add\r\n                    if (song.toLowerCase() === s.name.toLowerCase()) {\r\n                        this.selectedSong = s;\r\n                        this.selectedAlbum = alb;\r\n                        this.needToSendToDB = [false, false, false]; //We found the artist, album, and song so we dont need to create anything\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                //If we reach here it is because we have the album but no song\r\n                this.needToSendToDB = [false, false, true]; //We know thus far that we currently have the artist and album stored in the DB\r\n                this.selectedAlbum = alb;\r\n                return;\r\n            }\r\n        }\r\n\r\n        //If we reach here it means that we have the artist, but not the album/song so we must add them to the DB\r\n        this.needToSendToDB = [false, true, true];\r\n    }\r\n\r\n\r\n    /*\r\n        This is called when the use clicks save on the modal, based on what needs to be added, it adds it to the backend.\r\n        Note that the functions are cascading in the following manner:\r\n            Artist -> Album -> Song\r\n            x      -> Album -> Song\r\n            x      -> x     -> Song\r\n    */\r\n    private addWhatsNeeded(artist: string, album: string, song: string) {\r\n        if (this.needToSendToDB[0] && this.needToSendToDB[1] && this.needToSendToDB[2]) { //We need to add everything\r\n            this.addArtist();\r\n        } else if (!this.needToSendToDB[0] && !this.needToSendToDB[1] && this.needToSendToDB[2]) { //We need to add only a song\r\n            this.addSong(this.selectedArtist, this.selectedAlbum);\r\n        } else if (!this.needToSendToDB[0] && this.needToSendToDB[1] && this.needToSendToDB[2]) { //We need to add an album and song\r\n            this.addAlbum(this.selectedArtist);\r\n        } else {\r\n            this.triggerMessage(\"This song is already in the database! Try searching for it\");\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n        Adds an artist to the database and then calls addAlbum()\r\n    */\r\n    private addArtist() {\r\n        let newArtist = {\r\n            name: this.potentialArtist\r\n        };\r\n\r\n        let s: Subscription = this._apiService.postEntity<Artist>(\"Artists\", newArtist).subscribe(\r\n            d => this.selectedArtist = d,\r\n            err => console.log(\"Unable to add artist\"),\r\n            () => {\r\n                s.unsubscribe();\r\n                this.addAlbum(this.selectedArtist);\r\n            }\r\n        );\r\n    }\r\n\r\n    /*\r\n       Adds an album to the database and then calls addSong()\r\n   */\r\n    private addAlbum(artist: Artist) {\r\n        let newAlbum = {\r\n            artistId: artist.artistId,\r\n            name: this.potentialAlbum\r\n        };\r\n\r\n        let s: Subscription = this._apiService.postEntity<Album>(\"Albums\", newAlbum).subscribe(\r\n            d => this.selectedAlbum = d,\r\n            err => console.log(\"Unable to add album\"),\r\n            () => {\r\n                s.unsubscribe();\r\n                this.addSong(this.selectedArtist, this.selectedAlbum);\r\n            }\r\n        );\r\n    }\r\n\r\n    /*\r\n        Adds a song to the database and then outputs a success message\r\n    */\r\n    private addSong(artist: Artist, album: Album) {\r\n        let newSong = {\r\n            albumId: album.albumId,\r\n            artistId: artist.artistId,\r\n            name: this.potentialSong,\r\n            url: \"https://www.youtube.com/watch?v=\" + this.potentialID\r\n        };\r\n\r\n        let s: Subscription = this._apiService.postEntity<Song>(\"Songs\", newSong).subscribe(\r\n            d => this.selectedSong = d,\r\n            err => console.log(\"Unable to add artist\"),\r\n            () => {\r\n                s.unsubscribe();\r\n                //Do something here\r\n                this.triggerMessage(\"Successfully Added\");\r\n            }\r\n        );\r\n    }\r\n\r\n    showMoreYoutube() {\r\n        this.currentlyDisplaying *= 2;\r\n\r\n        if (this.currentlyDisplaying > this.numToFetch) this.currentlyDisplaying = this.numToFetch;\r\n    }\r\n\r\n    canShowMore(): boolean {\r\n        return this.currentlyDisplaying < this.numToFetch;\r\n    }\r\n\r\n    triggerMessage(message: string) {\r\n        this.successMessage = message;\r\n        this._success.next(this.successMessage);\r\n    }\r\n\r\n    openModal(content) {\r\n        this._modalService.open(content).result.then((result) => {\r\n            this.addWhatsNeeded(this.potentialArtist, this.potentialAlbum, this.potentialSong);\r\n        }, (reason) => { //On close via clicking away we clear anything the user might have typed\r\n            this.potentialArtist = \"\";\r\n            this.potentialAlbum = \"\";\r\n            this.potentialSong = \"\";\r\n            this.potentialID = \"\";\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-signin\\r\\n{\\r\\n    max-width: 75%;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.form-signin .form-signin-heading, .form-signin .checkbox\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.form-signin .checkbox\\r\\n{\\r\\n    font-weight: normal;\\r\\n}\\r\\n.form-signin .form-control\\r\\n{\\r\\n    position: relative;\\r\\n    font-size: 16px;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n.form-signin .form-control:focus\\r\\n{\\r\\n    z-index: 2;\\r\\n}\\r\\n.form-signin input[type=\\\"text\\\"]\\r\\n{\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-left-radius: 0;\\r\\n    border-bottom-right-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"]\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n}\\r\\n.account-wall\\r\\n{\\r\\n    margin-top: 20px;\\r\\n    padding: 40px 0px 20px 0px;\\r\\n    background-color: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n.login-title\\r\\n{\\r\\n    color: #555;\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n    display: block;\\r\\n}\\r\\n.profile-img\\r\\n{\\r\\n    width: 96px;\\r\\n    height: 96px;\\r\\n    margin: 0 auto 10px;\\r\\n    display: block;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n.need-help\\r\\n{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.new-account\\r\\n{\\r\\n    display: block;\\r\\n    margin-top: 10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<ngb-alert class=\\\"text-center\\\" type=\\\"danger\\\" (close)=\\\"this.invalidLogin = false\\\" *ngIf=\\\"this.invalidLogin\\\">Invalid username/password</ngb-alert>\\r\\n<ngb-alert class=\\\"text-center\\\" type=\\\"danger\\\" (close)='this.displayName = \\\"\\\"; this.usernameTaken = false' *ngIf=\\\"this.usernameTaken\\\">Username is already in use</ngb-alert>\\r\\n\\r\\n<div class=\\\"container mx-auto\\\" *ngIf=\\\"!this._storage.getValue('loggedIn') && !this.createUser\\\">\\r\\n    <div class=\\\"col-6 mx-auto\\\">\\r\\n        <h1 class=\\\"text-center login-title\\\">Sign in to continue to Mixtape</h1>\\r\\n        <div class=\\\"account-wall\\\">\\r\\n            <form class=\\\"form-signin was-validated\\\">\\r\\n                <input [value]=\\\"username\\\" (input)=\\\"username = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Username\\\"\\r\\n                    required autofocus>\\r\\n                <input [value]=\\\"password\\\" (input)=\\\"password = $event.target.value\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\"\\r\\n                    placeholder=\\\"Password\\\" (ngEnter)=\\\"loginClicked($event)\\\" required>\\r\\n                <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"loginClicked()\\\" [disabled]=\\\"!allFieldsFilled()\\\">Sign In</button>\\r\\n                <label class=\\\"checkbox pull-left\\\">\\r\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"rememberMe\\\" (change)=\\\"rememberMe = !rememberMe\\\"> Remember me</label>\\r\\n            </form>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-link text-center new-account mx-auto\\\" type=\\\"button\\\" (click)=\\\"createUserClicked()\\\">Create an account </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container mx-auto\\\" *ngIf=\\\"!this._storage.getValue('loggedIn') && this.createUser\\\">\\r\\n    <div class=\\\"col-8 mx-auto\\\">\\r\\n        <div class=\\\"account-wall\\\">\\r\\n            <form class=\\\"was-validated\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label for=\\\"inputFirstName\\\" class=\\\"col-form-label\\\">First Name:</label>\\r\\n                        <input [value]=\\\"firstName\\\" (input)=\\\"firstName = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputFirstName\\\"\\r\\n                            placeholder=\\\"First Name\\\" required autofocus>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label for=\\\"inputLastName\\\" class=\\\"col-form-label\\\">Last Name:</label>\\r\\n                        <input [value]=\\\"lastName\\\" (input)=\\\"lastName = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputLastName\\\" placeholder=\\\"Last Name\\\"\\r\\n                            required autofocus>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"for-group row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label for=\\\"inputUsername\\\" class=\\\"col-form-label\\\">Username:</label>\\r\\n                        <input [value]=\\\"displayName\\\" (input)=\\\"displayName = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputUsername\\\"\\r\\n                            placeholder=\\\"Username\\\" (focusout)=\\\"validateUsername()\\\" required>\\r\\n                        <small id=\\\"usernameHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!usernameTaken && hasClickedOff\\\">Username is available!</small>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label for=\\\"inputPassword\\\" class=\\\"col-form-label\\\">Password:</label>\\r\\n                        <input [value]=\\\"newPassword\\\" (input)=\\\"newPassword = $event.target.value\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\"\\r\\n                            placeholder=\\\"Password\\\" required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label for=\\\"inputCPassword\\\" class=\\\"col-form-label\\\">Confirm Password:</label>\\r\\n                        <input [value]=\\\"confirmPassword\\\" (input)=\\\"confirmPassword = $event.target.value\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputCPassword\\\"\\r\\n                            placeholder=\\\"Confirm Password\\\" required>\\r\\n                        <small id=\\\"passwordHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!passwordsMatch()\\\">Passwords must match</small>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"createAccount()\\\" [disabled]=\\\"!allFieldsFilled()\\\">Create Account</button>\\r\\n            </form>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-link text-center new-account mx-auto\\\" type=\\\"button\\\" (click)=\\\"this.createUser = !this.createUser\\\">Back</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","/*\r\n    Written by: Ryan Kruse\r\n    This component controls the login and signup features. It either auths. a user with the backend\r\n    or adds them to the backend with proper account creds.\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { StorageService } from '../shared/session-storage.service';\r\nimport { DataShareService } from '../shared/data-share.service';\r\n\r\nimport { User } from '../interfaces/user';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  styleUrls: ['./login.component.css'],\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit{\r\n    invalidLogin: boolean = false;\r\n    private username: string = \"\";\r\n    private password: string = \"\"; //will remove \r\n    private rememberMe: boolean = true;\r\n\r\n    createUser: boolean = false;\r\n\r\n    usernameTaken: boolean = false;\r\n    private hasClickedOff: boolean = false;\r\n\r\n    private firstName: string = \"\";\r\n    private lastName: string = \"\";\r\n    private displayName: string = \"\";\r\n    private newPassword: string = \"\";\r\n    private confirmPassword: string = \"\";\r\n\r\n    constructor(private _apiService: ApiService, public _storage: StorageService,private _router: Router, private _dataShareService: DataShareService){}\r\n\r\n    /*\r\n        If we click remember me, load the last username sent into our box\r\n    */\r\n    ngOnInit(){\r\n        let usrName = this._storage.getFromLocal('savedUsername');\r\n\r\n        if(usrName)\r\n            this.username = usrName;\r\n    }\r\n\r\n    /*\r\n        Called when the user clicks login. Only able to if all the fields are filled in\r\n        It first gets a token from the API then validates the token\r\n    */\r\n    private loginClicked(){\r\n        if(!this.allFieldsFilled())\r\n            return;\r\n        \r\n        let s: Subscription;\r\n\r\n        let loginCred = {\r\n            Username: this.username,\r\n            Password: this.password\r\n        };\r\n\r\n        let cred: string = JSON.stringify(loginCred);\r\n        let user: any;\r\n\r\n        s = this._apiService.getLoginToken(cred).subscribe(\r\n            d => user = d,\r\n            err => {this.invalidLogin = true; this.password = \"\"},\r\n            () => {\r\n                this._storage.setValue(\"token\", user[\"token\"]);\r\n                this.validateLogin();\r\n                s.unsubscribe();\r\n            }\r\n        );\r\n    }\r\n\r\n    /*\r\n        Called after the user attempts to login. The method validates if the token is correct\r\n        or not. If it is, the DOM is moved to the homepage\r\n    */\r\n    private validateLogin(){\r\n        let user: User;\r\n        let s: Subscription = this._apiService.validateToken().subscribe(\r\n            d => user = d,\r\n            err => console.log(\"Invalid token\", err),\r\n            () => {\r\n                this._storage.setValue('loggedIn', true);\r\n\r\n                if(this.rememberMe)\r\n                    this._storage.saveToLocal('savedUsername', this.username);\r\n                else\r\n                    this._storage.removeFromLocal('saveUsername');\r\n\r\n                s.unsubscribe();\r\n\r\n                this._dataShareService.changeUser(user);\r\n                this._router.navigate(['./home']);\r\n            }\r\n        );\r\n    }\r\n\r\n    /*\r\n        Called after the user leaves the username box. It checks with the API to see if\r\n        the given username has been taken or not, if so it alerts the user with the error\r\n    */\r\n    private validateUsername(){\r\n        if(this.displayName.length <= 0)\r\n            return;\r\n\r\n        let s: Subscription;\r\n        console.log(this.displayName);\r\n        s = this._apiService.validateUsername(this.displayName).subscribe(\r\n            d => d = d,\r\n            err => {\r\n                if(err['error']['Error']){\r\n                    this.usernameTaken = true;\r\n                }else{\r\n                    this.hasClickedOff = true;\r\n                }   \r\n            }\r\n        )\r\n    }\r\n\r\n    /*\r\n        When the user clicks create an account, we clear all of the values\r\n    */\r\n    private createUserClicked(){\r\n        this.createUser = true;\r\n        this.displayName = \"\";\r\n        this.firstName = \"\";\r\n        this.lastName = \"\";\r\n        this.newPassword = \"\";\r\n        this.confirmPassword = \"\";\r\n    }\r\n    \r\n    /*\r\n        Called when the user creates their account. It validates that all off the fields are correct\r\n        if not, it alerts the user of the error. If they are valid, we add them to the backend\r\n        and then call the login method\r\n    */\r\n    private createAccount(){\r\n        let s: Subscription;\r\n\r\n        let newUser = {\r\n            FirstName: this.firstName,\r\n            LastName: this.lastName,\r\n            Username: this.displayName,\r\n            Password: this.newPassword\r\n        }\r\n\r\n        let returnedUser: User;\r\n        s = this._apiService.postEntity<User>(\"Users\", newUser).subscribe(\r\n            d => returnedUser = d,\r\n            err => {\r\n                if(err['error']['Error']){\r\n                    this.usernameTaken = true;\r\n                    this.displayName = \"\";\r\n                }\r\n            },\r\n            () => {\r\n                s.unsubscribe();\r\n                this.username = this.displayName;\r\n                this.password = this.newPassword;\r\n                this.loginClicked();\r\n            }\r\n        );\r\n    }\r\n    \r\n    /*\r\n        Called when entering passwords, returns if they match or not\r\n        @return boolean - If the passwords are matching\r\n    */\r\n    private passwordsMatch(): boolean{\r\n        return this.newPassword.toLocaleLowerCase() === this.confirmPassword.toLocaleLowerCase()\r\n                && this.newPassword.length > 0 && this.confirmPassword.length > 0;\r\n    }\r\n\r\n    /*\r\n        Called when disabling buttons or attempting to login/create user\r\n        @return boolean - Returns if all the fields are filled in\r\n    */\r\n    private allFieldsFilled(): boolean{\r\n        if(this.createUser)\r\n            return this.passwordsMatch() && !this.usernameTaken && this.displayName.length > 0 && this.firstName.length > 0 && this.lastName.length > 0;\r\n\r\n        return this.username.length > 0 && this.password.length > 0;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".icon-menu{\\r\\n    float: right;\\r\\n    opacity: inherit;\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.img-margin{\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\n.specific-height{\\r\\n    max-height: 25vh;\\r\\n    overflow-y: auto;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.css\n// module id = ../../../../../src/app/mouseover-menu/mouseover-menu.component.css\n// module chunks = main","module.exports = \"<div class=\\\"icon-menu\\\">\\r\\n  <div *ngIf=\\\"deleteFromPL\\\">\\r\\n    <img class=\\\"icon icon-middle icon-sm float-right img-margin\\\" placement=\\\"top\\\" ngbTooltip=\\\"Remove\\\" src='assets/playlist/delete_song_black.png'\\r\\n      (click)=\\\"deletePlaylistSong()\\\" />\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addToQ\\\">\\r\\n    <img class=\\\"icon icon-middle icon-sm float-right img-margin\\\" placement=\\\"top\\\" ngbTooltip=\\\"Add to queue\\\" src='assets/playlist/add_playlist.png'\\r\\n      (click)=\\\"addToQueue()\\\" />\\r\\n  </div>\\r\\n  <div ngbDropdown placement=\\\"top\\\" *ngIf=\\\"addToPL\\\">\\r\\n    <img ngbDropdownToggle class=\\\"icon icon-middle icon-sm float-right img-margin\\\" placement=\\\"left\\\" ngbTooltip=\\\"Add to a playlist\\\"\\r\\n      src='assets/playlist/add_playlist_2.png' />\\r\\n    <div ngbDropdownMenu aria-labelledby=\\\"addToPlaylists\\\">\\r\\n      <ul class=\\\"list-group list-group-flush specific-height\\\" *ngIf=\\\"this.playlists\\\">\\r\\n        <li class=\\\"list-group-item list-group-item-action\\\" *ngFor=\\\"let playlist of this.playlists index as i\\\" (click)=\\\"addToPlaylist(playlist, i)\\\">\\r\\n          {{ playlist.name }}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"deletePL\\\">\\r\\n    <img class=\\\"icon icon-middle icon-sm float-right img-margin\\\" placement=\\\"right\\\" ngbTooltip=\\\"Delete\\\" src=\\\"assets/playlist/delete_song_black.png\\\"\\r\\n      (click)=\\\"deletePlaylist()\\\" />\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.html\n// module id = ../../../../../src/app/mouseover-menu/mouseover-menu.component.html\n// module chunks = main","/*\r\n  Written by: Ryan Kruse\r\n\r\n  This component controls the small icon menu that pops up on mouseover. It allows the user to add a song to a given playlist,\r\n  add a song to the current playlist in the queue, or delete a song from the current playlist.\r\n\r\n  The component makes all of the calls to the API and updates the playlists in the data share so that they are \r\n  dynamically updated on the DOM\r\n*/\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { DataShareService } from '../shared/data-share.service';\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { debounceTime } from 'rxjs/operator/debounceTime';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { Playlist } from '../interfaces/playlist';\r\nimport { Song } from '../interfaces/song';\r\nimport { PlaylistSong } from '../interfaces/playlistsong';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-mouseover-menu',\r\n  templateUrl: './mouseover-menu.component.html',\r\n  styleUrls: ['./mouseover-menu.component.css', '../shared/global-style.css']\r\n})\r\n\r\nexport class MouseoverMenuComponent implements OnInit {\r\n\r\n  //Takes input of three bools to indicate which icon to show (add to playlist, add to queue, or delete from playlist)\r\n  @Input() addToPL: boolean;\r\n  @Input() addToQ: boolean;\r\n  @Input() deleteFromPL: boolean;\r\n  @Input() deletePL: boolean;\r\n\r\n  //The current song and playlist song we are acting on\r\n  @Input() selectedSong: Song;\r\n  @Input() selectedPLS: PlaylistSong;\r\n\r\n  @Input() plToDelete: Playlist; //The playlist (if any) that we want to delete\r\n  user: User;\r\n  playlists: Playlist[];\r\n  currentPL: Playlist;\r\n\r\n  //The component outputs a message if the action either failed or completed\r\n  successMessage: string;\r\n  @Output() successMessageOutput: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private _apiService: ApiService, private _dataShareService: DataShareService) { }\r\n\r\n  /*\r\n    On Init we sync our current user, playlists, and currently playing playlist\r\n  */\r\n  ngOnInit() {\r\n    this._dataShareService.user.subscribe(res => this.user = res);\r\n    this._dataShareService.playlist.subscribe(res => this.playlists = res);\r\n    this._dataShareService.currentPlaylist.subscribe(res => this.currentPL = res);\r\n  }\r\n\r\n  /*\r\n    Called when we attempt to add a song to a given playlist, if successful we add the song to the given playlist, update the global lists, and output a message.\r\n    If not successful we output a fail message.\r\n    @param p: Playlist - The playlist to add the song to\r\n    @param index: number - The index of the 'p' in our global array of playlists (from the DataShareService)\r\n  */\r\n  addToPlaylist(p: Playlist, index: number) {\r\n    let toSendPLS = {\r\n      playlistId: p.playlistId,\r\n      songId: this.selectedSong.songId\r\n    }\r\n    let actPLS: PlaylistSong;\r\n\r\n    let s: Subscription = this._apiService.postEntity<PlaylistSong>(\"PlaylistSongs\", toSendPLS).subscribe(\r\n      d => actPLS = d,\r\n      err => {\r\n        this.outputMessage(\"Unable to add \" + this.selectedSong.name + \" to \" + p.name);\r\n      },\r\n      () => {\r\n        actPLS.song = this.selectedSong;\r\n        s.unsubscribe();\r\n        p.playlistSong.push(actPLS);\r\n        this.playlists[index] = p;\r\n        this._dataShareService.changePlaylist(this.playlists);\r\n        this.outputMessage(this.selectedSong.name + \" added to \" + p.name);\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    Called when we add a song to the currently playing playlist or we want to start a new queue. If we aren't listening to a playlist\r\n    then we create a new queue and allow the user to add songs to it (via add to queue button) and they can listen to said queue.\r\n    If the user is currently listening to a playlist, then we append the song to the end of the list and output a success message\r\n  */\r\n  addToQueue() {\r\n    let pls: PlaylistSong;\r\n    let copyPL: Playlist;\r\n\r\n    if (this.currentPL === null) {\r\n      let newPL: Playlist = {\r\n        playlistId: null,\r\n        active: true,\r\n        name: \"Custom Queue\",\r\n        userId: this.user.userId,\r\n        playlistSong: []\r\n      };\r\n\r\n      pls = this.createPlaylistSong(newPL);\r\n      newPL.playlistSong.push(pls);\r\n      copyPL = newPL;\r\n    } else {\r\n      pls = this.createPlaylistSong(this.currentPL);\r\n      copyPL = {\r\n        playlistId: this.currentPL.playlistId,\r\n        active: this.currentPL.active,\r\n        name: this.currentPL.name,\r\n        userId: this.currentPL.userId,\r\n        playlistSong: this.currentPL.playlistSong.slice()\r\n      }\r\n      copyPL.playlistSong.push(pls);\r\n    }\r\n\r\n    this._dataShareService.changeCurrentPlaylist(copyPL);\r\n    this.outputMessage(this.selectedSong.name + \" added to queue\");\r\n  }\r\n\r\n  /*\r\n    Called when the user attempts to delete a song from a playlist. If the user is successful then we remove the song from the playlist,\r\n    update the global playlists, and output a success message. If not successful we output a fail message\r\n  */\r\n  deletePlaylistSong() {\r\n    let plIndex: number = this.playlists.findIndex(pl => pl.playlistId === this.currentPL.playlistId);\r\n    let plsIndex: number = this.currentPL.playlistSong.findIndex(pls => pls.playlistSongId === this.selectedPLS.playlistSongId);\r\n\r\n    if (this.selectedPLS.playlistSongId === null) { //If the ID is null, we know it was added to queue not to the playlist...so we simply remove it\r\n      this.currentPL.playlistSong.splice(plsIndex, 1);\r\n      this._dataShareService.changeCurrentPlaylist(this.currentPL);\r\n      this.outputMessage(\"Removed \" + this.selectedSong.name + \" from queue\");\r\n    } else {\r\n      let s: Subscription = this._apiService.deleteEntity<PlaylistSong>(\"PlaylistSongs\", this.selectedPLS.playlistSongId).subscribe(\r\n        d => d = d,\r\n        err => this.outputMessage(\"Unable to remove \" + this.selectedSong.name + \" from \" + this.playlists[plIndex].name),\r\n        () => {\r\n          s.unsubscribe();\r\n          this.playlists[plIndex].playlistSong.splice(plsIndex, 1);\r\n          this._dataShareService.changePlaylist(this.playlists);\r\n          this.outputMessage(\"Removed \" + this.selectedSong.name + \" from \" + this.playlists[plIndex].name);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  /*\r\n    Called when we want to create a new playlist song to add to a playlist\r\n    @param p: Playlist - the playlist we want to create a playlist song for\r\n    @return PlaylistSong - A new playlist song\r\n  */\r\n  createPlaylistSong(p: Playlist): PlaylistSong {\r\n    let pls: PlaylistSong = {\r\n      playlistSongId: null,\r\n      playlistId: p.playlistId,\r\n      songId: this.selectedSong.songId,\r\n      playlist: p,\r\n      song: this.selectedSong\r\n    };\r\n\r\n    return pls;\r\n  }\r\n\r\n  deletePlaylist() {\r\n    let plIndex: number = this.playlists.findIndex(pl => pl.playlistId === this.plToDelete.playlistId);\r\n    let s: Subscription;\r\n\r\n    s = this._apiService.deleteEntity<Playlist>(\"Playlists\", this.plToDelete.playlistId).subscribe(\r\n      d => d = d,\r\n      err => this.outputMessage(\"Unable to delete playlist\"),\r\n      () => {\r\n        s.unsubscribe();\r\n        this.playlists.splice(plIndex, 1);\r\n        this._dataShareService.changePlaylist(this.playlists);\r\n        this.outputMessage(\"Playlist deleted!\");\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    Called whenever we finish an action, the message is emitted to all parent components\r\n  */\r\n  outputMessage(message: string) {\r\n    this.successMessage = message;\r\n    this.successMessageOutput.emit(this.successMessage);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/mouseover-menu/mouseover-menu.component.ts","/*\r\n  Written by: Ryan Kruse\r\n  This directive is used with any input field, it allows the user to hit enter to submit their field\r\n*/\r\nimport { Directive, ElementRef, HostListener, Output, EventEmitter } from'@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngEnter]'\r\n})\r\nexport class NgEnterDirective {\r\n\r\n  private el: ElementRef;\r\n\r\n  @Output() ngEnter: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private _el: ElementRef) {\r\n    this.el = this._el;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onKeyDown(e){\r\n    if((e.which == 13 || e.keyCode == 13)){\r\n      this.ngEnter.emit(e);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/ng-enter.directive.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".account-wall\\r\\n{\\r\\n    margin-top: 20px;\\r\\n    padding: 40px 0px 20px 0px;\\r\\n    background-color: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n/*.no-padding{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.static-size-card{\\r\\n    height: 45vh;\\r\\n    max-height: 45vh;\\r\\n}\\r\\n\\r\\n.static-size-list{\\r\\n    height: 85%;\\r\\n    max-height: 85%;\\r\\n    overflow-y: auto; \\r\\n}*/\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.css\n// module id = ../../../../../src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"main-container container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <!--User profile information-->\\r\\n    <div class=\\\"col-12 mx-auto\\\">\\r\\n      <div class=\\\"card account-wall\\\">\\r\\n        <div class=\\\"text-center font-weight-bold\\\">\\r\\n          Profile Information\\r\\n        </div>\\r\\n        <form>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"inputFirstName\\\" class=\\\"col-form-label\\\">First Name:</label>\\r\\n              <input [value]=\\\"this.user.firstName\\\" (input)=\\\"this.user.firstName = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                id=\\\"inputFirstName\\\" placeholder=\\\"First Name\\\" required autofocus>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"inputLastName\\\" class=\\\"col-form-label\\\">Last Name:</label>\\r\\n              <input [value]=\\\"this.user.lastName\\\" (input)=\\\"this.user.lastName = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputLastName\\\"\\r\\n                placeholder=\\\"Last Name\\\" required autofocus>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"for-group row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"inputUsername\\\" class=\\\"col-form-label\\\">Username:</label>\\r\\n              <input [value]=\\\"this.user.username\\\" (input)=\\\"this.user.username = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputUsername\\\"\\r\\n                placeholder=\\\"Username\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"inputPassword\\\" class=\\\"col-form-label\\\">Update Password:</label>\\r\\n              <input [value]=\\\"newPassword\\\" (input)=\\\"newPassword = $event.target.value\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\"\\r\\n                placeholder=\\\"Password\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"inputCPassword\\\" class=\\\"col-form-label\\\">Confirm Password:</label>\\r\\n              <input [value]=\\\"confirmPassword\\\" (input)=\\\"confirmPassword = $event.target.value\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputCPassword\\\"\\r\\n                placeholder=\\\"Confirm Password\\\" required>\\r\\n              <small id=\\\"passwordHelpBlock\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"!passwordsMatch()\\\">Passwords must match</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--<button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"updateAccount()\\\" [disabled] = \\\"!passwordsMatch()\\\">Update Info</button>-->\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"updateAccount()\\\" [disabled]=\\\"true\\\">Update Info (Coming Soon!)</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.html\n// module id = ../../../../../src/app/profile/profile.component.html\n// module chunks = main","/*\r\n  Written by: Ryan Kruse\r\n  This component controls the profile page. It allows the user to update/delete their current playlists\r\n  and edit their creds.\r\n*/\r\nimport { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ActivatedRoute, Router} from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { StorageService } from '../shared/session-storage.service';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { Playlist } from '../interfaces/playlist';\r\nimport { PlaylistSong } from '../interfaces/playlistsong';\r\nimport { Artist } from '../interfaces/artist';\r\nimport { Album } from '../interfaces/album';\r\nimport { Song } from '../interfaces/song';\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: User;\r\n\r\n  private playlists: Observable<Playlist[]>;\r\n\r\n  private playlist: Playlist;\r\n\r\n  private newPlaylistName: string = \"\";\r\n\r\n  private firstName: string = \"\";\r\n  private lastName: string = \"\";\r\n  private displayName: string = \"\";\r\n  newPassword: string = \"\";\r\n  confirmPassword: string = \"\";\r\n\r\n  constructor(private _apiService: ApiService, private _storage: StorageService, private _ngZone: NgZone, \r\n              private _route: ActivatedRoute, private _router: Router, private _modalService: NgbModal){}\r\n  \r\n\r\n  ngOnInit() {\r\n    this._route.data.subscribe((data: { user: User }) => {\r\n      this.user = data.user;\r\n    });\r\n\r\n    this.playlists = this._apiService.getAllEntities<Playlist>('Playlists/User/' + this.user.userId);\r\n  }\r\n\r\n  /*\r\n    Called when the user selects a playlist to edit\r\n    @param playlist: Playlist - The playlist selected by the user\r\n    @POST - Sets this.playlist to param playlist\r\n  */\r\n  private playlistSelected(playlist: Playlist){\r\n    this.playlist = playlist;\r\n  }\r\n\r\n  /*\r\n    Called when the user removes a song from the playlist, it removes it from the DB\r\n    and updates the DOM\r\n    @param playlistSong: PlaylistSong - The playlist song to remove from the playlist\r\n  */\r\n  private removeSong(playlistSong: PlaylistSong){\r\n    console.log(playlistSong);\r\n  }\r\n\r\n  /*\r\n    Called when the user changes the name of a given playlist\r\n    it opens a model and waits for the user to close it via click, click off, esc, or button press\r\n    it then updates the playlist name on the DOM and backend DB <---soon to come\r\n    @param content - The content placed in the modal\r\n  */\r\n  openModal(content){\r\n    this._modalService.open(content).result.then((result) => {\r\n      if(this.newPlaylistName.length > 0) //On close via the save button we check if we changed anything, if so we update it\r\n        this.playlist.name = this.newPlaylistName;\r\n      this.newPlaylistName = \"\";\r\n    }, (reason) => { //On close via clicking away we clear anything the user might have typed\r\n      this.newPlaylistName = \"\";\r\n    });\r\n  }\r\n\r\n  /*\r\n    This method is currently not working, we need to update the backend to only update values that are passed,\r\n    the problem is that if we don't update our password, the backend will set it to null => the user can never login\r\n    Other than that, the user updates perfectly\r\n  */\r\n  updateAccount(){\r\n    let s: Subscription;\r\n\r\n    let newUser;\r\n\r\n    if(this.newPassword.length > 0 && this.confirmPassword.length > 0){\r\n      this.user.password = this.confirmPassword;\r\n      newUser = this.user\r\n    }else{\r\n      newUser = {\r\n        firstName: this.user.firstName,\r\n        lastName: this.user.lastName,\r\n        userID: this.user.userId,\r\n        username: this.user.username\r\n      }\r\n    }\r\n    \r\n    s = this._apiService.putEntity<User>(\"Users\", this.user.userId, newUser).subscribe(\r\n      d => d = d,\r\n      err => console.log(\"Unable to update user\", err),\r\n      () => {\r\n        console.log(this.user);\r\n        this.newPassword = \"\";\r\n        this.confirmPassword = \"\";\r\n        s.unsubscribe();\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    Called when updating passwords returns if they match or not\r\n    @return boolean - if the user's passwords match\r\n  */\r\n  passwordsMatch(): boolean{\r\n      return this.newPassword.toLocaleLowerCase() === this.confirmPassword.toLocaleLowerCase();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/profile/profile.component.ts","/*\r\n    Written by: Ryan Kruse\r\n    This service is used whenver we make an API call. All methods take object type T and produce an\r\n    Observable<T>. The service supports GET, POST, PUT, DELETE and login validation\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { StorageService } from '../shared/session-storage.service';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { YoutubeResult } from '../interfaces/youtuberesult';\r\nimport { LastfmTrack} from '../interfaces/lastfmresult';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ApiService{\r\n    private _api='https://xpx-mixtape.herokuapp.com/api/'\r\n    private _youtubeToken: string = \"AIzaSyDYswrJ-YubO8TOqNO0_ictO1RnTh8FC-4\";\r\n\r\n    private lastFMKey: string = \"1e231c3b75baee47b9c947ce5b806e0c\";\r\n\r\n    //private _api = 'http://localhost:60430/api/';\r\n\r\n    constructor(private _http: HttpClient, private _storage: StorageService){}\r\n    \r\n    /*\r\n        Called when we attempt to login, it returns a token authenticating the user\r\n        @param cred: string - The login credentials (username and password in json format)\r\n        @return Observable<any> - An Observable containing a token for the user\r\n    */\r\n    getLoginToken(cred: string): Observable<any>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {'Content-Type': 'application/json'}\r\n        );\r\n        return this._http.post(this._api + 'Auth/login', cred, {headers}) as Observable<any>;\r\n    }\r\n\r\n    /*\r\n        Called to validate the token given on login, if it is valid the API returns a user object without their password\r\n        @return Observable<User> - A validated User object\r\n    */\r\n    validateToken(): Observable<User>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.get(this._api + \"Auth/me\", {headers}) as Observable<User>;\r\n    }\r\n\r\n    /*\r\n        This will be called once the backend is working properly\r\n        @param username: string - The username to check for duplicates in the DB\r\n        @return: Observable<any> - An error message if the username is taken, else null \r\n    */\r\n    validateUsername(username: string): Observable<any>{\r\n        return this._http.get(this._api + \"Users/Check/\" + username) as Observable<any>;\r\n    }\r\n    \r\n    /*\r\n        Returns a specific entity from the api\r\n        @param path: string - The relative patht to the api IE Users/\r\n        @param id: number - The id of the entity to pull from the API\r\n        @return Observable<T> - An Observable containing the specific entity from the DB\r\n    */\r\n    getSingleEntity<T>(path: string, id: number): Observable<T>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.get(this._api + path + \"/\" + id, {headers}) as Observable<T>;\r\n    }\r\n\r\n    /*\r\n        Returns all entities for a given endpoint (IE: Users, Playlists, etc)\r\n        @param path: string - The relative patht to the api IE Users\r\n        @return Observable<T> - An Observable containing an array of the specific entities from the DB\r\n    */\r\n    getAllEntities<T>(path: string): Observable<T[]>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.get(this._api + path, {headers}) as Observable<T[]>;\r\n    }\r\n\r\n    /*\r\n        Adds a new entity to the DB\r\n        @param path: string - The relative patht to the api IE Users/\r\n        @param obj: any - the json object of the entity to add\r\n        @return Observable<T> - An Observable containing the new entity added to the DB\r\n    */\r\n    postEntity<T>(path: string, obj: any): Observable<T>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.post(this._api + path, obj, {headers}) as Observable<T>;\r\n    }\r\n\r\n    /*\r\n        Updates a specific entity in the DB\r\n        @param path: string - The relative patht to the api IE Users/\r\n        @param id: number - The id of the entity to update\r\n        @param obj: any - the json object of the entity to add\r\n        @return Observable<T> - An Observable containing the new entity added to the DB\r\n    */\r\n    putEntity<T>(path: string, id: number, obj: any): Observable<T>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.put(this._api + path + \"/\" + id, obj, {headers}) as Observable<T>;\r\n    }\r\n\r\n    /*\r\n        Deletes a specific entity from the DB\r\n        @param path: string - The relative patht to the api IE Users/\r\n        @param id: number - The id of the entity to delete\r\n        @return OBservable<T> - The object delted from the DB\r\n    */\r\n    deleteEntity<T>(path: string, id: number): Observable<T>{\r\n        let headers: HttpHeaders = new HttpHeaders(\r\n            {\"Authorization\": \"Bearer \" + this._storage.getValue(\"token\")}\r\n        );\r\n        return this._http.delete(this._api + path + \"/\" + id, {headers}) as Observable<T>;\r\n    }\r\n\r\n\r\n    /*\r\n        Returns any for now, will return youtube type later (once it's all parsed out)\r\n    */\r\n    getYoutubeResults(searchString: string, toDisplay: number): Observable<YoutubeResult[]>{\r\n        if(!searchString || searchString.length <= 0) return; \r\n\r\n        let baseUrl: string = \"https://www.googleapis.com/youtube/v3/search?part=snippet\"\r\n        let mResult: string = \"&maxResults=\" + toDisplay;\r\n        let search: string = \"&q=\" + searchString;\r\n        let endUrl: string = \"&type=video&key=\" + this._youtubeToken;\r\n        \r\n        return this._http.get(baseUrl + mResult + search + endUrl) as Observable<YoutubeResult[]>;\r\n    }\r\n\r\n    getLastfmResults(artist: string, song: string): Observable<LastfmTrack>{\r\n        let baseUrl: string = \"http://ws.audioscrobbler.com/2.0/?method=track.getinfo&api_key=\" + this.lastFMKey;\r\n        let postUrl: string = \"&track=\" + song + \"&artist=\" + artist + \"&autocorrect=1&format=json\";\r\n\r\n        return this._http.get(baseUrl + postUrl) as Observable<LastfmTrack>;\r\n    }\r\n}\r\n\r\n\r\n\r\n//AIzaSyDYswrJ-YubO8TOqNO0_ictO1RnTh8FC-4 TOKEN\r\n// client ID: 132736446562-2bf10rb348ode6mtbfffl4pkns916e01.apps.googleusercontent.com\r\n///Client SECRET: zXDxMcLjcQcpig0Bi4bXHMlP\r\n\r\n/*\r\nHOW TO SEARCH YOUTUBE API FOR A VIDEO GIVEN A SEARCH WORD:\r\nBASE URL: https://www.googleapis.com/youtube/v3/search?part=snippet\r\n&maxResults=<num results>\r\n&q=<search>\r\n&type=video\r\n&key=AIzaSyDYswrJ-YubO8TOqNO0_ictO1RnTh8FC-4\r\n\r\nLOOK AT ME: https://developers.google.com/youtube/v3/docs/search/list#examples\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n/*\r\n\r\n\r\nApplication name\tMixtape-API\r\nAPI key\t1e231c3b75baee47b9c947ce5b806e0c\r\nShared secret\tea69e872350c66fdab63146a9a5fc5bc\r\nRegistered to\tmhk-mixtape\r\n\r\n*/\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/api.service.ts","/*\r\n  Written by: Ryan Kruse\r\n  This service allows components to be dynamically updated and allows them to update the current user, playlist, and all playlists in real time\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { Playlist } from '../interfaces/playlist';\r\n\r\n@Injectable()\r\nexport class DataShareService {\r\n  \r\n  private userSubject = new BehaviorSubject<User>(null);\r\n  user = this.userSubject.asObservable();\r\n\r\n  private playlists = new BehaviorSubject<Playlist[]>([]); //starts empty\r\n  playlist = this.playlists.asObservable();\r\n\r\n  private currentPlaylistSubject = new BehaviorSubject<Playlist>(null);\r\n  currentPlaylist = this.currentPlaylistSubject.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  /*\r\n    Called when we make edits to any playlists the user owns, it alerts all subscribers\r\n    and gives them the new data\r\n    @param playlist: Playlist[] - An array of new playlists\r\n  */\r\n  changePlaylist(playlist: Playlist[]){\r\n    this.playlists.next(playlist);\r\n  }\r\n\r\n  /*\r\n    Called whenever we change the current user (usually just on login and logout)\r\n    @param user: User - the new user\r\n  */\r\n  changeUser(user: User){\r\n    this.userSubject.next(user);\r\n  }\r\n\r\n  /*\r\n    Called whenever we change the playlist we are currently listening to\r\n    @param playlist: Playlist - The new playlist to listen to\r\n  */\r\n  changeCurrentPlaylist(playlist: Playlist){\r\n    this.currentPlaylistSubject.next(playlist);\r\n  }\r\n\r\n  /*\r\n    Called when we logout, it clears the values to avoid any collisions with the next login\r\n  */\r\n  clearAllValues(){\r\n    this.userSubject.next(null);\r\n    this.playlists.next(null);\r\n    this.currentPlaylistSubject.next(null);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/data-share.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".margin-top{\\r\\n    margin-top: 3%;\\r\\n}\\r\\n\\r\\n.no-padding{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.shadow{\\r\\n    box-shadow:         3px 3px 5px 6px #ccc;\\r\\n    -moz-box-shadow:    3px 3px 5px 6px #ccc;\\r\\n    -webkit-box-shadow: 3px 3px 5px 6px #ccc;\\r\\n}\\r\\n\\r\\n#snackbar {\\r\\n    min-width: 250px; /* Set a default minimum width */\\r\\n    margin-left: -125px; /* Divide value of min-width by 2 */\\r\\n    background-color: #333; /* Black background color */\\r\\n    color: #fff; /* White text color */\\r\\n    text-align: center; /* Centered text */\\r\\n    border-radius: 2px; /* Rounded borders */\\r\\n    padding: 16px; /* Padding */\\r\\n    position: fixed; /* Sit on top of the screen */\\r\\n    z-index: 1; /* Add a z-index if needed */\\r\\n    left: 50%; /* Center the snackbar */\\r\\n    bottom: 30px; /* 30px from the bottom */\\r\\n}\\r\\n\\r\\nimg{\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.img-left{\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.img-right{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\nimg#playlist-img{\\r\\n    width: 75px;\\r\\n}\\r\\n\\r\\n.icon{\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.icon:hover{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.icon-middle{\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.icon-ex-sm{\\r\\n    width: 17px;\\r\\n}\\r\\n\\r\\n.icon-sm{\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n.icon-med{\\r\\n    width: 30px;\\r\\n}\\r\\n\\r\\n.icon-lrg{\\r\\n    width: 35px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/global-style.css\n// module id = ../../../../../src/app/shared/global-style.css\n// module chunks = main","/*\r\n    Written by: Ryan Kruse\r\n    This service checks if we have a token in session storage, if so it allows us to navigate to the given page\r\n    otherwise it redirects the user to the login page\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\n\r\nimport { StorageService } from './session-storage.service';\r\n\r\n@Injectable()\r\nexport class SessionGuard implements CanActivate{\r\n    \r\n    constructor(private _router: Router, private _storage: StorageService){}\r\n\r\n    /*\r\n        Called on attempted page load, checks if there is a token in session storage if so we continue else nav away\r\n        @param route: ActivatedRouteSnapshot - The page we are attempting to load\r\n        @return boolean - if the user can load the page (if we have a token or not)\r\n    */\r\n    canActivate(route: ActivatedRouteSnapshot): boolean{\r\n        //If our user is not logged in, then he cannot access some pages so we send them to the login screen\r\n        if(!this._storage.getValue('token')){\r\n            //alert('Please login to view this page'); //We can remove this only here for testing\r\n            //start the new naviagation\r\n            this._router.navigate(['/login']);\r\n            //abort the path we were going to take\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/session-guard.service.ts","\r\n/*\r\n    What is stored (session storage):\r\n        onSong - The index of the song the user is current listening to \r\n        loggedIn - If the user is currently logged in or not\r\n        token - the auth token given to the user on login\r\n    What is stored (local storage):\r\n        _history - The history of songs the user has listened to \r\n        savedUsername - The username of the user if they clicked remember me\r\n*/\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/share';\r\n\r\nexport class StorageService{\r\n    //Used to allow dynamic updates on our playlist\r\n    public playlistObservable: Observable<any>;\r\n    private _playlistObserver: any;\r\n    constructor(){\r\n        this.playlistObservable = new Observable(observer => {\r\n            this._playlistObserver = observer;\r\n        }).share();\r\n    }\r\n\r\n    /*\r\n        Sets the playlist to a new value and notifies all subscribers\r\n        @param key: string - '_playlist'\r\n        @param value: any - The value to set it to \r\n    */\r\n    public setPlaylist(key: string, value: any){\r\n        this.setValue(key, value);\r\n    }\r\n\r\n    /*\r\n        Sets a key in session storage to a given key\r\n        @param key: string = the key of the object\r\n        @param value: any - the value we want to set the key to\r\n    */\r\n    public setValue(key: string, value: any): void{\r\n        if(value){\r\n            value = JSON.stringify(value);\r\n        }\r\n        sessionStorage.setItem(key, value);\r\n    }\r\n\r\n    /*\r\n        Returns a value from session storage if it exists, returns null if it does not\r\n        @param key: string - the object we want to get the value for\r\n        @return any - Returns the value of the key or null if the key is not in storage\r\n    */\r\n    public getValue(key: string): any{\r\n        let value: string = sessionStorage.getItem(key);\r\n\r\n        if(value && value != \"undefined\" && value != \"null\"){\r\n            return JSON.parse(value);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        Returns if the key is in the session storage or not\r\n    */\r\n    public hasValue(key: string): boolean{\r\n        if(sessionStorage.getItem(key) === null){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /*\r\n        Removes the key and its corresponding value from session storage\r\n    */\r\n    public removeValue(key: string): void{\r\n        sessionStorage.removeItem(key);\r\n    }\r\n\r\n    /*\r\n        Clears the whole storage\r\n    */\r\n    public clearAll(): void{\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    public saveToLocal(key: string, value: any): void{\r\n        if(value){\r\n            value = JSON.stringify(value);\r\n        }\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    public getFromLocal(key: string): any{\r\n        let value = localStorage.getItem(key);\r\n\r\n        if(value && value != \"undefined\" && value != \"null\"){\r\n            return JSON.parse(value);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public removeFromLocal(key: string): void{\r\n        localStorage.removeItem(key);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/session-storage.service.ts","/*\r\n    This service is called when we go to a new page, it makes sure we always have the newest update of \r\n    the user entity.\r\n    Within each component that uses this, we can get the user info from the API\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { StorageService } from './session-storage.service';\r\n\r\nimport { User } from '../interfaces/user';\r\n\r\n@Injectable()\r\nexport class UserResolver implements Resolve<any>{\r\n    constructor(private router: Router, private apiService: ApiService, private storage: StorageService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n        return this.apiService.validateToken();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/user-resolver.service.ts","/*\r\n    This service class is used to get any user details and make API requests,\r\n    it is created to make communication between pages much easier and only dependent\r\n    on one service\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { User } from '../interfaces/user';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { StorageService } from '../shared/session-storage.service';\r\n\r\n@Injectable()\r\nexport class UserService{\r\n    private user: User;\r\n\r\n    private loggedIn: boolean = false;\r\n\r\n    constructor(private _apiService: ApiService, private _storage: StorageService){}\r\n\r\n    /*\r\n        Called from login.component, sets our user to our storage value and sets login to true\r\n    */\r\n    public logIn(user: User): void{\r\n        this.user = user;//this._storage.getValue('user');\r\n        this.loggedIn = this._storage.getValue('loggedIn');\r\n    }\r\n\r\n    /*\r\n        Clear the storage to update our DOM and set values\r\n    */\r\n    public logOut(): void{\r\n        this.loggedIn = false;\r\n        this.user = null;\r\n\r\n        this._storage.removeValue('token');\r\n        this._storage.setValue('loggedIn', this.loggedIn);\r\n    }\r\n\r\n    public getUserID(): number{\r\n        if(this.user)\r\n            return this.user.userId;\r\n        return -1;\r\n    }\r\n\r\n    public setUser(user: User){\r\n        this.user = user;\r\n    }\r\n\r\n    public getUser(): User{\r\n        return this.user;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/shared/user.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".side-bar{\\r\\n    height: 100vh;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    overflow-x: hidden;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.css\n// module id = ../../../../../src/app/sidebar/sidebar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"side-bar no-padding\\\">\\r\\n  <div class=\\\"card w-100\\\">\\r\\n    <div class=\\\"card-header text-center font-weight-bold\\\">Playlists:\\r\\n      <img class=\\\"icon icon-middle icon-sm float-right img-margin\\\" placement=\\\"left\\\" ngbTooltip=\\\"Create Playlist\\\" src='assets/playlist/edit.png'\\r\\n        (click)=\\\"createPlaylist()\\\" />\\r\\n    </div>\\r\\n    <ul class=\\\"list-group list-group-flush\\\">\\r\\n      <li class=\\\"list-group-item list-group-item-action\\\" (mouseover)=\\\"this.mouseOver = i\\\" (mouseout)=\\\"this.mouseOver = -1\\\" *ngFor=\\\"let playlist of userPlaylists index as i\\\"\\r\\n        (click)=\\\"selectPlaylist(playlist)\\\">\\r\\n        {{ playlist.name }}\\r\\n        <app-mouseover-menu [@showState]=\\\"this.mouseOver === i ? 'show' : 'hide'\\\" [addToPL]=\\\"false\\\" [addToQ]=\\\"false\\\" [deleteFromPL]=\\\"false\\\"\\r\\n          [deletePL]=\\\"true\\\" [selectedSong]=\\\"null\\\" [plToDelete]=\\\"playlist\\\" (successMessageOutput)=\\\"triggerMessage($event)\\\" (click)=\\\"$event.stopPropagation()\\\"></app-mouseover-menu>\\r\\n      </li>\\r\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"selectPlaylist(null)\\\">Clear Queue</button>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div id=\\\"snackbar\\\" [@showState]=\\\"successMessage ? 'show' : 'hide'\\\">{{ successMessage }}</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.html\n// module id = ../../../../../src/app/sidebar/sidebar.component.html\n// module chunks = main","/*\r\n  Written by: Ryan Kruse\r\n  This component controls the playlist holder on the right side of the DOM. It allows the user to select which playlist to listen to\r\n  and allows them to create a new playlist\r\n*/\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { trigger, state, animate, transition, style, sequence } from '@angular/animations';\r\nimport { Subscription } from \"rxjs\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { debounceTime } from 'rxjs/operator/debounceTime';\r\n\r\nimport { ApiService } from '../shared/api.service';\r\nimport { DataShareService } from '../shared/data-share.service';\r\n\r\nimport { MouseoverMenuComponent } from '../mouseover-menu/mouseover-menu.component';\r\n\r\nimport { User } from '../interfaces/user';\r\nimport { Playlist } from '../interfaces/playlist';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css', '../shared/global-style.css'],\r\n  animations: [\r\n    trigger(\r\n      'showState', [\r\n        state('show', style({\r\n          opacity: 1,\r\n          visibility: 'visible'\r\n        })),\r\n        state('hide', style({\r\n          opacity: 0,\r\n          visibility: 'hidden'\r\n        })),\r\n        transition('show => *', animate('200ms')),\r\n        transition('hide => show', animate('400ms')),\r\n      ]\r\n    )\r\n  ]\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  user: User;\r\n  userPlaylists: Playlist[] = []\r\n\r\n  mouseOver: number = -1;\r\n  private _success = new Subject<string>();\r\n  successMessage: string;\r\n\r\n  private defaultPLName: string = \"Playlist \";\r\n\r\n  @Output() playlist: EventEmitter<Playlist> = new EventEmitter<Playlist>(); //Output the playlist selected to listen to\r\n\r\n  constructor(private _apiService: ApiService, private _dataShareService: DataShareService) { }\r\n\r\n  /*\r\n    On init we sync all of the user's playlists and the user.\r\n  */\r\n  ngOnInit() {\r\n    this._dataShareService.playlist.subscribe(res => this.userPlaylists = res);\r\n\r\n    this._dataShareService.user.subscribe(res => this.user = res);\r\n\r\n    this._success.subscribe((message) => this.successMessage = message);\r\n    debounceTime.call(this._success, 2000).subscribe(() => this.successMessage = null);\r\n\r\n    //Incase the sync was messed up we also pull all of the user's playlists from the API as a saftey net\r\n    let s: Subscription;\r\n    s = this._apiService.getAllEntities<Playlist>('Playlists/User/' + this.user.userId).subscribe(\r\n      d => this.userPlaylists = d,\r\n      err => console.log(\"Unable to load playlists\", err),\r\n      () => { s.unsubscribe(); this._dataShareService.changePlaylist(this.userPlaylists); }\r\n    )\r\n  }\r\n\r\n  /*\r\n    Called when the user selects a playlist to listen to. It alerts all parent components of\r\n    the playlist\r\n    @param p: Playlist - The playlist selected to listen to\r\n  */\r\n  selectPlaylist(p: Playlist) {\r\n    this.playlist.emit(p);\r\n  }\r\n\r\n  createPlaylist() {\r\n    let nPL = {\r\n      active: true,\r\n      name: this.defaultPLName + (this.userPlaylists.length + 1),\r\n      userId: this.user.userId,\r\n    }\r\n\r\n    let returnedPL: Playlist;\r\n    let s: Subscription = this._apiService.postEntity<Playlist>(\"Playlists\", nPL).subscribe(\r\n      d => returnedPL = d,\r\n      err => console.log(err),\r\n      () => {\r\n        s.unsubscribe();\r\n        this.userPlaylists.push(returnedPL);\r\n        this._dataShareService.changePlaylist(this.userPlaylists);\r\n        this.triggerMessage(\"Playlist created!\");\r\n\r\n        this.selectPlaylist(returnedPL);\r\n      }\r\n    );\r\n  }\r\n\r\n  triggerMessage(message: string) {\r\n    this.successMessage = message;\r\n    this._success.next(this.successMessage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/sidebar/sidebar.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'youtubePipe'\n})\nexport class YoutubePipe implements PipeTransform {\n\n  transform<T>(items: T[]): T[] {\n    if(!items) return [];\n\n    return items['items'];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".current-playlist-holder{\\r\\n    background: darkgrey !important;\\r\\n}\\r\\n\\r\\n.no-padding{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.current-playlist-holder{\\r\\n    background: darkgrey !important;\\r\\n}\\r\\n\\r\\n.playlist-container{\\r\\n    padding: 0;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n\\r\\n.playlist-song-list{\\r\\n    background: lightgrey !important;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.css\n// module id = ../../../../../src/app/youtube/youtube.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 no-padding\\\">\\r\\n      <youtube-player [videoId]=\\\"this.videoId\\\" [height]=\\\"getScreenHeight()\\\" [width]=\\\"getScreenWidth()\\\" (ready)=\\\"savePlayer($event)\\\"\\r\\n        (change)=\\\"onStateChange($event)\\\"></youtube-player>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 playlist-container playlist-song-list no-padding margin-top shadow\\\" *ngIf=\\\"this.playlist && this.showPlaylist\\\">\\r\\n      <div class=\\\"card\\\" *ngIf=\\\"this.playlist  && this.showPlaylist\\\">\\r\\n        <div class=\\\"card-header text-center current-playlist-holder\\\">\\r\\n          <h5 class=\\\"text-center\\\" placement=\\\"top\\\" ngbTooltip=\\\"Edit Playlist Name\\\" (click)=\\\"openModal(content)\\\">{{this.playlist.name}}</h5>\\r\\n        </div>\\r\\n        <ol class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let pls of this.playlist.playlistSong index as i\\\">\\r\\n          <li class=\\\"list-group-item\\\" [style.background-color]=\\\"this.onSong === i ? '#918A8A' : '#BEBEBE'\\\" (mouseover)=\\\"this.mouseOver = i\\\"\\r\\n            (mouseout)=\\\"this.mouseOver = -1\\\">\\r\\n            <img class=\\\"d-none d-sm-none d-md-inline\\\" [src]=\\\"this.getThumbnail(pls.song.url)\\\" /> {{i+1}}. {{pls.song.name}}\\r\\n            <app-mouseover-menu [@showState]=\\\"this.mouseOver === i ? 'show' : 'hide'\\\" [addToPL]=\\\"true\\\" [addToQ]=\\\"true\\\" [deleteFromPL]=\\\"true\\\"\\r\\n              [selectedSong]=\\\"pls.song\\\" [selectedPLS]=\\\"pls\\\" (successMessageOutput)=\\\"triggerMessage($event)\\\"></app-mouseover-menu>\\r\\n          </li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div id=\\\"snackbar\\\" [@showState]=\\\"successMessage ? 'show' : 'hide'\\\">{{ successMessage }}</div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Change Playlist Name</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <input [value]=\\\"playlistRename\\\" (input)=\\\"playlistRename = $event.target.value\\\" type=\\\"text\\\" class=\\\"form-control col-12\\\" placeholder=\\\"Playlist Name\\\"\\r\\n      (ngEnter)=\\\"c($event)\\\" autofocus=\\\"autofocus\\\">\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success col-2\\\" (click)=\\\"c()\\\" [disabled]=\\\"playlistRename.length <= 0 || playlistRename === this.playlist.name\\\">Save</button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.html\n// module id = ../../../../../src/app/youtube/youtube.component.html\n// module chunks = main","/*\r\n  Written by: Ryan Kruse\r\n  This component controls the embded youtube player and the currently playing playlist.\r\n*/\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { trigger, state, animate, transition, style, sequence } from '@angular/animations';\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { debounceTime } from 'rxjs/operator/debounceTime';\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { StorageService } from '../shared/session-storage.service';\r\nimport { DataShareService } from '../shared/data-share.service';\r\nimport { ApiService } from '../shared/api.service';\r\n\r\nimport { MouseoverMenuComponent } from '../mouseover-menu/mouseover-menu.component';\r\n\r\nimport { Playlist } from '../interfaces/playlist';\r\nimport { Song } from '../interfaces/song';\r\n\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'app-youtube',\r\n  templateUrl: './youtube.component.html',\r\n  styleUrls: ['./youtube.component.css', '../shared/global-style.css'],\r\n  animations: [\r\n    trigger(\r\n      'showState', [\r\n        state('show', style({\r\n          opacity: 1,\r\n          visibility: 'visible'\r\n        })),\r\n        state('hide', style({\r\n          opacity: 0,\r\n          visibility: 'hidden'\r\n        })),\r\n        transition('show => *', animate('200ms')),\r\n        transition('hide => show', animate('400ms')),\r\n      ]\r\n    )\r\n  ]\r\n})\r\n\r\nexport class YoutubeComponent implements OnInit {\r\n\r\n  @Input() playlist: Playlist;\r\n  @Input() showPlaylist: boolean;\r\n\r\n  private lastPlaylist: Playlist;\r\n\r\n  private player: YT.Player;\r\n  private url: string = \"\";\r\n  videoId;\r\n\r\n  private _success = new Subject<string>();\r\n  successMessage: string;\r\n  mouseOver: number = -1;\r\n\r\n  private onSong: number = this._storage.getValue('onSong') ? this._storage.getValue('onSong') : -1;\r\n  private repeat: boolean = false;\r\n  private paused: boolean = false;\r\n\r\n  private playlistRename: string = \"\";\r\n\r\n  constructor(private _storage: StorageService, private _dataShareService: DataShareService, private _modalService: NgbModal, private _apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.lastPlaylist = this.playlist;\r\n    this._dataShareService.currentPlaylist.subscribe(res => this.playlist = res);\r\n\r\n    this._success.subscribe((message) => this.successMessage = message);\r\n    debounceTime.call(this._success, 2000).subscribe(() => this.successMessage = null);\r\n\r\n  }\r\n\r\n  /*\r\n    This is called on load or when we select a new playlist to view\r\n  */\r\n  ngOnChanges() {\r\n    //If we do not have a playlist selected, there is nothing to do\r\n    if (!this.playlist || !this.showPlaylist)\r\n      return;\r\n\r\n    //If our lastplayist we watched is equal to the current one, then we continue playing where we left off\r\n    if (this.lastPlaylist === this.playlist || (this.lastPlaylist && (this.lastPlaylist.playlistId === this.playlist.playlistId))) {\r\n      this.onSong = this._storage.getValue('onSong') ? this._storage.getValue('onSong') : 0;\r\n    } else { //otherwise we start from the beginning\r\n      this.onSong = -1;\r\n      this.lastPlaylist = this.playlist;\r\n      this.nextSong();\r\n    }\r\n  }\r\n\r\n  savePlayer(player) {\r\n    this.player = player;\r\n    this.player.setSize(this.getScreenWidth(), this.getScreenHeight());\r\n  }\r\n\r\n  /*\r\n    Called when soemthing changes our player state (ie we pause the video or it ends)\r\n    -1 - not started\r\n    0 - ended\r\n    1 - playing\r\n    2 - paused\r\n    3 - loading\r\n  */\r\n  onStateChange(event) {\r\n    switch (event.data) {\r\n      case -1:\r\n        break;\r\n      case 0:\r\n        this.nextSong();\r\n        break;\r\n      case 1:\r\n        this.paused = false;\r\n        break;\r\n      case 2:\r\n        this.paused = true;\r\n        break;\r\n      case 3:\r\n        break;\r\n      default:\r\n        console.log(\"DEFAULT\");\r\n    }\r\n  }\r\n\r\n  /*\r\n    If the user clicks the next button we move to the next song, if repeat is \r\n    enabled we restart the playlist (if on the last song)\r\n  */\r\n  private nextSong() {\r\n    if (this.onSong + 1 >= this.playlist.playlistSong.length) {\r\n      if (this.repeat)\r\n        this.onSong = 0;\r\n      else\r\n        return;\r\n    } else {\r\n      this.onSong++;\r\n    }\r\n\r\n    this.playVideo()\r\n  }\r\n\r\n  /*\r\n    If the user clicks the last button we move to the last song, if repeat is \r\n    enabled we move to the last song (if on the first song)\r\n  */\r\n  private lastSong() {\r\n    if (this.onSong - 1 < 0) {\r\n      this.onSong = this.playlist.playlistSong.length - 1;\r\n    } else {\r\n      this.onSong--;\r\n    }\r\n\r\n    this.playVideo();\r\n  }\r\n\r\n  /*\r\n    This method is called when we move to a new song or load a new playlist\r\n    it sets what song we are on in the session storage and loads then plays the video\r\n  */\r\n  private playVideo() {\r\n    this._storage.setValue('onSong', this.onSong);\r\n    this.parseId(this.playlist.playlistSong[this.onSong].song.url);\r\n    this.player.loadVideoById(this.videoId, 0);\r\n    this.player.playVideo();\r\n\r\n  }\r\n\r\n  private repeatClicked() {\r\n    this.repeat = !this.repeat;\r\n  }\r\n\r\n  private pauseClicked() {\r\n    this.paused = !this.paused;\r\n\r\n    if (this.paused)\r\n      this.player.pauseVideo();\r\n    else\r\n      this.player.playVideo();\r\n  }\r\n\r\n  triggerMessage(message: string) {\r\n    this.successMessage = message;\r\n    this._success.next(this.successMessage);\r\n  }\r\n\r\n  openModal(content) {\r\n    this._modalService.open(content).result.then((result) => {\r\n      if (this.playlistRename.length > 0) //On close via the save button we check if we changed anything, if so we update it\r\n        this.playlist.name = this.playlistRename;\r\n      this.renamePlaylist();\r\n      this.playlistRename = \"\";\r\n    }, (reason) => { //On close via clicking away we clear anything the user might have typed\r\n      this.playlistRename = \"\";\r\n    });\r\n  }\r\n\r\n  private renamePlaylist(){\r\n    let s: Subscription = this._apiService.putEntity<Playlist>(\"Playlists\", this.playlist.playlistId, this.playlist).subscribe(\r\n      d => d = d,\r\n      err => this.triggerMessage(\"Unable to change name of playlist\"),\r\n      () => {\r\n        s.unsubscribe();\r\n        this.triggerMessage(\"Playlist name updated!\");\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    This method is called when we load a video, it parses the video ID from the youtube link\r\n    @Input url: string - The url to parse\r\n    @POST: sets this.videoId to the parsed string\r\n  */\r\n  private parseId(url: string) {\r\n    if (url !== '') {\r\n      var fixedUrl = url.replace(/(>|<)/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n      if (fixedUrl !== undefined) {\r\n        this.videoId = fixedUrl[2].split(/[^0-9a-z_\\-]/i);\r\n        this.videoId = this.videoId[0];\r\n      } else {\r\n        this.videoId = url;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n    This method is called everytime we display a song on the DOM, it requests the thumbnail saved via youtube's api\r\n    and returns the source string to load the image from\r\n    @Input url: string - The video url to get the thumbnail for\r\n    @Output string - The thumbnail source link from the youtube api\r\n  */\r\n  private getThumbnail(url: string): string {\r\n    var prefixImgUrl: string = \"https://img.youtube.com/vi/\";\r\n    var suffixImgUrl: string = \"/default.jpg\";\r\n    var ID;\r\n    var imgURL: string = '';\r\n    //Pull the video ID from the link so we can embed the video\r\n    if (url !== '') {\r\n      var fixedUrl = url.replace(/(>|<)/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n      if (fixedUrl !== undefined) {\r\n        ID = fixedUrl[2].split(/[^0-9a-z_\\-]/i);\r\n        ID = ID[0];\r\n      } else {\r\n        ID = url;\r\n      }\r\n      imgURL = prefixImgUrl + ID + suffixImgUrl;\r\n    }\r\n    return imgURL;\r\n  }\r\n\r\n  getScreenHeight(): number {\r\n    return window.screen.height * .35;\r\n  }\r\n\r\n  getScreenWidth(): number {\r\n    return window.screen.width * .45;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/app/youtube/youtube.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/rkruse/Documents/GitHub/mixtape-frontend/src/main.ts"],"sourceRoot":"webpack:///"}